<?php
/**
* Implementation of hook_block().
* Adds a block that has new text.
*/
	function ctn_location_import_block($op = 'list', $delta = 0, $edit = array()) 
	{
	  switch ($op) 
		{
			case 'list':
				  $blocks[0]['info'] = t('CTN Location Import Module');
				  return $blocks;
			case 'view':
				  $block[0]['subject'] = t('CTN Location Import Module');
				  $block[0]['content'] = t('Location Import');
				   return $block[$delta];
		}
	}
	
	function ctn_location_import_menu() 
	{
		$items = array();

		$items['directory/ctn_location_import'] = array(
			'title' => t('Location Import'),
			'description' => t('Description of your On this date settings page'),
			'page callback' => 'ctn_location_import_show_form',
			'access arguments' => array('access administration pages'),
			'type' => MENU_NORMAL_ITEM,
		);

		return $items;
	}
	
	function ctn_location_import_show_form()
	{
		return drupal_get_form('ctn_location_import_form');
	}

	function ctn_location_import_form() 
	{
		$form = array();
		
		$form['#attributes'] = array('enctype' => "multipart/form-data");
		$form['upload_file'] = array(
			'#type' => 'file'
		);
		
		 $form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Upload'),
		  );
		
		return $form;
	}
	
	function ctn_location_import_form_submit($form_id, $form_values) 
	{
		$limits = array();
		$validators = array('file_validate_extensions' => array($limits['extensions']));
		
		if( file_check_directory( file_directory_path() ) ) 
		{
			drupal_set_message(t('WARNING: Server '.file_directory_path(). 'is not accessible. Consult with site admin!', 'status') );
		}
		
		if ($file = file_save_upload('upload_file', null, file_directory_path())) 
		{
			$row = 1;
			if (($handle = fopen($file->filepath, "r")) !== FALSE) 
			{
				while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) 
				{
					if($row == 2)
					{
						$languages = array($data[15], $data[16], $data[17], $data[18], $data[19], $data[20], $data[21],
								$data[22], $data[23], $data[24], $data[25], $data[26], $data[27], $data[28], $data[29],
								$data[30], $data[31], $data[32], $data[33], $data[34], $data[35], $data[36], $data[37], $data[38]);
						save_ctnterms($data, "Languages Served", 15, 39);
						
						$org_types = array($data[39], $data[40], $data[41], $data[42], $data[43], $data[44], $data[45], $data[46],
								$data[47], $data[48],$data[49], $data[50], $data[51], $data[52], $data[53], $data[54]);
						save_ctnterms($data, "Organization Type", 39, 54);
						
						$target_user_groups = array($data[55], $data[56], $data[57], $data[58], $data[59], $data[60], $data[61], $data[62],$data[63]);
						save_ctnterms($data, "Target User Groups", 55, 63);
						
						$types_of_services = array($data[64], $data[65], $data[66], $data[67], $data[68], $data[69], $data[70], $data[71],
								$data[72],$data[73],$data[74],$data[75],$data[76],$data[77],$data[78],$data[79],$data[80],$data[81],
								$data[82],$data[83],$data[84],$data[85],$data[86],$data[87]);
						save_ctnterms($data, "Types of Services", 64, 87);
						
						 $other_hardware = array($data[88], $data[89], $data[90], $data[91], $data[92], $data[93], $data[94], $data[95],
								$data[96],$data[97]);
						save_ctnterms($data, "Other Hardware", 88, 97);
						
						$operating_systems = array($data[98], $data[99], $data[100], $data[101], $data[102], $data[103], $data[104], $data[105]);
						save_ctnterms($data, "Operating System", 98, 105);

						
					}
					if($row > 2)
					{
						create_location_node($data, $languages, $org_types, $target_user_groups, $types_of_services, $other_hardware, $operating_systems );
					}
					$row++;
				}
			}
			$message = 'Uploaded CSV file to DB.';
			drupal_set_message(t($message));
		}
		else
		{
			drupal_set_message('ERROR: Uploading the file to ' . file_directory_path());
		}
	}
	
	
	function create_location_node($data, $languages, $org_types, $target_user_groups, $types_of_services, $other_hardware, $operating_systems )
	{
		$name = $data[0];
		$address1 = $data[1];
		$address2 = $data[2];
		$city = $data[3];
		$state = $data[4];
		$zip = $data[5];
		$phone = $data[6];
		$website = $data[7];
		$email = $data[8];
		$about_org = preg_replace('/[^(\x20-\x7F)]*/','', trim($data[9]));
		$about_program_offered = preg_replace('/[^(\x20-\x7F)]*/','', trim($data[10]));
		$access_rights = $data[11];
		$drop_infees = $data[12];
		$class_workshop_fee = $data[13];
		$number_of_computers = intval($data[14]);

		if(!empty($name))
		{
			$org_user = user_load( array('name' => trim($name)));
			
			if(!$org_user)
			{
				$org_user_data = array('name' => trim($name),
					'pass' => user_password(), 
					'init' => trim($name), 
					'status' => 1, 
					"authname_$module" => trim($name), 
					'access' => time());
				$org_user = user_save('', $org_user_data);
				drupal_set_message(t("Saving user: ".$org_user->uid), "warning");
			}
			else
			{
				drupal_set_message(t("Found user: ".$org_user->uid), "warning");
			}
		
	
			$node = new StdClass();
			$node->title = trim($name);
			$node->type = 'uprofile';
			$node->status  = 1;
			$node->uid = $org_user->uid;
			
			$node->field_about_me = array(0 => array('value' => $about_org));
			$node->field_programinfo = array(0 => array('value' => $about_program_offered));

			
			$result = db_fetch_array(db_query('select * from node where title = "%s" limit 1', $name));
			if(!$result)
			{
				drupal_set_message(t("Adding new Node: ".$name), "warning");
			}
			else
			{
				$node->nid = $result['nid'];
				drupal_set_message(t("Updating Node: ".$name."(".$result['nid'] .")"), "warning");
				//node_delete($result['nid']);
			}
			node_save($node);
						
			$locationNode = new StdClass();
			$locationNode->title = trim($name);
			$locationNode->type = 'location';
			$locationNode->uid = $org_user->uid;
			$locationNode->nid = $node->nid;
			node_save($locationNode);
			
			// delete cache entries for that url
			//cache_clear_all(NULL, 'cache_block');
			//cache_clear_all(NULL, 'cache_page');
			
			assign_ctnterms_to_location($node->nid, $data, $languages, $org_types, $target_user_groups, $types_of_services, $other_hardware, $operating_systems );
		}
	}
	
	
	function save_ctnterms($data, $vocabName, $start, $end)
	{
		for ($c=$start; $c < $end; $c++) 
		{
			$name = trim($data[$c]);
			if(!empty($name))
			{
				add_ctnterms_taxonomy($name, $vocabName);
			}
		}
	}
	
	function add_ctnterms_taxonomy($language, $vocabName) 
	{
		$language_results = taxonomy_get_term_by_name($language);

		$vocabularies = taxonomy_get_vocabularies();
		foreach($vocabularies as &$vocab)
		{
			if($vocab->name == $vocabName)
			{
				$language_form['name'] = $language;
				$language_form['vid'] = $vocab->vid;
				$language_form['tid'] = $language_results[0]->tid;
				taxonomy_save_term($language_form);
			}
		}
	}
	
	function assign_ctnterms_to_location($nid, $data, $languages, $org_types, $target_user_groups, $types_of_services, $other_hardware, $operating_systems)
	{
		$terms = array();
		$node = node_load($nid);
		$terms = array_merge($terms, get_terms($data, $node, $languages, 15, 38));
		$terms = array_merge($terms, get_terms($data, $node, $org_types, 39, 55));
		$terms = array_merge($terms, get_terms($data, $node, $target_user_groups, 56, 63));
		$terms = array_merge($terms, get_terms($data, $node, $types_of_services, 64, 87));
		$terms = array_merge($terms, get_terms($data, $node, $other_hardware, 88, 97));
		$terms = array_merge($terms, get_terms($data, $node, $operating_systems, 98, 105));
		
		taxonomy_node_save($node, $terms);
		taxonomy_node_get_terms($node, 'tid', TRUE);

	}
	
	function get_terms($data, $node, $ctn_terms, $start, $end)
	{
		$ctn_taxonomy_terms = array();
		for ($c = $start; $c <= $end; $c++) 
		{
			if(trim($data[$c]) == 'y' || trim($data[$c]) == 'Y')
			{
				$ctn_term = trim($ctn_terms[$c-$start]);
				$ctn_term_results = taxonomy_get_term_by_name($ctn_term);
				$tid = $ctn_term_results[0]->tid;
				
				drupal_set_message(t("Setting CTN Term: ".$ctn_term."(".$tid.") to : ".$node->title."-".$node->nid), "warning");
				array_push($ctn_taxonomy_terms, $tid);
			}
		}
		return $ctn_taxonomy_terms;
	}
	